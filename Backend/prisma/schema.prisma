// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Member {
  mem_id    Int    @id @default(autoincrement())
  mem_name  String
  mem_phone String
  mem_email String @unique
  Membership Membership[]
  Issuance Issuance[]
}

model Membership {
  membership_id Int    @id @default(autoincrement())
  member        Member @relation(fields: [member_id], references: [mem_id], onDelete: Cascade)
  member_id     Int
  status        String
}

model Collection {
  collection_id   Int    @id @default(autoincrement())
  collection_name String
  Books          Book[]
}

model Category {
  cat_id       Int    @id @default(autoincrement())
  cat_name     String
  sub_cat_name String?
  Books        Book[]
}

model Book {
  book_id            Int       @id @default(autoincrement())
  book_name          String
  book_cat          Category   @relation(fields: [book_cat_id], references: [cat_id])
  book_cat_id       Int
  book_collection   Collection @relation(fields: [book_collection_id], references: [collection_id])
  book_collection_id Int
  book_launch_date  DateTime
  book_publisher    String
  Issuance         Issuance[]
}

model Issuance {
  issuance_id        Int       @id @default(autoincrement())
  book              Book       @relation(fields: [book_id], references: [book_id])
  book_id           Int
  issuance_date     DateTime
  issuance_member  Member     @relation(fields: [issuance_member_id], references: [mem_id])
  issuance_member_id Int
  issued_by         String
  target_return_date DateTime
  issuance_status   String
}